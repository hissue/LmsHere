server.port=8082

spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html 

# dataSource 설정(JDBC 설정)
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=lms
spring.datasource.password=1004 

#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=50MB
#spring.servlet.multipart.max-request-size=50MB
#
# com.example.hr 인터페이스가 있는 패키지
# 이 패키지 안의 인터페이스는 @Repository, @Mapper 어노테이션 설정
# 인터페이스가 있는 위치 지정!!!!
mybatis.type-aliases-package=com.homework.lms

# 매퍼 XML 파일의 위치를 지정!!!!
mybatis.mapper-locations=classpath:mapper/**/*.xml

# 로깅을 위한 설정 -> 예시임!
logging.level.root=info;
logging.level.com.example.myapp=error

# SQL 쿼리 로그 설정

# 스프링 프레임워크라면 >> src/main/resources/log4jdbc.log4j2.properties 아래 두 줄 작성
# Log4JDBC가 사용할 로깅 델리게이터 지정, SLF4J 사용
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
# SQL 쿼리의 최대 길이 설정, 0이면 모든 SQL 쿼리가 전체로 로깅됨
log4jdbc.dump.sql.maxlinelength=0

# HikariCP(High-Performance JDBC Connection Pool) 라이브러리에서 로깅 레벨
# 사용 가능한 로깅 레벨 : OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE
logging.level.com.zaxxer.hikari=INFO
logging.level.javax.sql.DataSource=OFF

# SQL 및 DB 관련 이벤트 로깅 설정, 문제해결을 위한 경우를 제외하고는 사용 권장 안 함
logging.level.jdbc.audit=OFF
# ResultSet과 관련된 메시지의 로깅 레벨 설정
logging.level.jdbc.resultset=OFF
# ResultSetTable 관련된 로깅 레벨 설정, SQL 실행 결과를 데이터 Table 형식으로 출력
logging.level.jdbc.resultsettable=INFO
# SQL 쿼리에 대한 로깅 설정, sqltiming이 INFO, DEBUG이면 안 해도 됨
logging.level.jdbc.sqlonly=OFF
# SQL 실행시간 출력, DEBUG, INFO이면 실행 시간과 쿼리 텍스트 모두 출력
logging.level.jdbc.sqltiming=INFO
# INFO: 커넥션 생성 및 반환 정보 출력, WARN: 경고 메시지 출력
logging.level.jdbc.connection=OFF 
 
spring.security.user.password.encoder=bcrypt;
